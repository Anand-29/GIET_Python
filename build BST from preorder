class Node:
    def __init__(self,data):
        self.data=data
        self.left=None
        self.right=None
class Dummy:
    index=0
class Tree:
    def build(self,list,track,low,high,size):
        #print(track.index)
        if(track.index>=size or low>high):
            return None
        root=Node(list[track.index])
        track.index+=1
        if(low==high):
            return root
        for i in range(low,high+1):
            if(list[i]>root.data):
                break
        root.left=ob1.build(list,track,track.index,i-1,size)
        root.right=ob1.build(list,track,i,high,size)
        return root
    def inorder(self,root):
        if(root==None):
            return                  #github.com/Anand-29
        ob1.inorder(root.left)
        print(root.data)
        ob1.inorder(root.right)
ob1=Tree();ob2=Dummy()
list=[4,2,3,5,6,7]
root=None
root=ob1.build(list,ob2,0,len(list)-1,len(list))
ob1.inorder(root)
